#!/bin/bash# 定义颜色BLUE_COLOR="\033[36m"RED_COLOR="\033[31m"GREEN_COLOR="\033[32m"VIOLET_COLOR="\033[35m"RES="\033[0m"echo -e "${BLUE_COLOR}# ######################################################################${RES}"echo -e "${BLUE_COLOR}#                       Docker Shell Script                            #${RES}"echo -e "${BLUE_COLOR}#                       Blog: www.lmaye.com                            #${RES}"echo -e "${BLUE_COLOR}#                       Email: lmay@lmaye.com                          #${RES}"echo -e "${BLUE_COLOR}# ######################################################################${RES}"# 创建目录echo -e "${BLUE_COLOR}---> create [elasticsearch]directory start.${RES}"if [ ! -d "./elasticsearch/" ]; thenmkdir -p ./elasticsearch/master/conf ./elasticsearch/master/data ./elasticsearch/master/logsfiecho -e "${RED_COLOR}---> create [kibana]directory start.${RES}"if [ ! -d "./kibana/" ]; thenmkdir -p ./kibana/conf ./kibana/logsfiecho -e "${VIOLET_COLOR}---> create [nginx]directory start.${RES}"if [ ! -d "./nginx/" ]; thenmkdir -p ./nginx/conf ./nginx/logs ./nginx/wwwfiecho -e "${BLUE_COLOR}===> create directory success.${RES}"# 目录授权(data/logs 都要授读/写权限)echo -e "${BLUE_COLOR}---> directory authorize start.${RES}"if [ -d "./elasticsearch/" ]; thenchmod 777 ./elasticsearch/master/data/ ./elasticsearch/master/logs/fiecho -e "${BLUE_COLOR}===> directory authorize success.${RES}"# 移动配置文件echo -e "${BLUE_COLOR}---> move [elasticsearch]config file start.${RES}"if [ -f "./es-master.yml" ]; thenmv ./es-master.yml ./elasticsearch/master/conffiecho -e "${RED_COLOR}---> move [kibana]config file start.${RES}"if [ -f "./kibana.yml" ]; thenmv ./kibana.yml ./kibana/conffiecho -e "${VIOLET_COLOR}---> move [nginx]config file start.${RES}"if [ -f "./nginx.conf" ]; thenmv ./nginx.conf ./nginx/conffiecho -e "${BLUE_COLOR}===> move config files success.${RES}"echo -e "${GREEN_COLOR}>>>>>>>>>>>>>>>>>> The End <<<<<<<<<<<<<<<<<<${RES}"# 部署项目echo -e "${BLUE_COLOR}==================> Docker deploy Start <==================${RES}"docker-compose up --build -d