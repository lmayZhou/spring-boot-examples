<?xml version="1.0" encoding="UTF-8"?>
<sagacity xmlns="https://www.sagframe.com/schema/sqltoy-translate"
          xmlns:xsi="https://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="https://www.sagframe.com/schema/sqltoy-translate https://www.sagframe.com/schema/sqltoy/sqltoy-translate.xsd">
    <!-- 缓存有默认失效时间，默认为1小时,因此只有较为频繁的缓存才需要及时检测 -->
    <cache-translates>
        <!-- 可以用spring bean方式来实现缓存:针对数据字典方法可以有一个字典分类的参数 -->
        <!-- <service-translate cache="dictKeyNameCache" service="dictService" method="getDictByType" keep-alive="30" /> -->
        <!-- 可以用rest 方式来实现缓存 -->
        <!-- <rest-translate cache="dictKeyNameCache" url="http://xxxx/common/getDictByType"/> -->

        <!-- 用户ID和姓名的缓存 -->
        <sql-translate cache="userIdName" datasource="SqlToy">
            <sql>
                <![CDATA[
				--#not_debug#--
				select id as user_id, user_name from sys_user
			    ]]>
            </sql>
        </sql-translate>
    </cache-translates>

    <!-- 缓存刷新检测,可以提供多个基于sql、service、rest服务检测 -->
    <!-- cluster-time-deviation 集群各个节点的时间容差,默认为1秒 -->
    <cache-update-checkers cluster-time-deviation="1">
        <!-- 基于sql的缓存更新检测 -->
        <sql-increment-checker cache="userIdName" check-frequency="60" datasource="SqlToy">
            <sql>
                <![CDATA[
                --#not_debug#--
                select id as user_id, user_name from sys_user where update_at >=:lastUpdateTime
                ]]>
            </sql>
        </sql-increment-checker>
        <!-- 缓存更新检测返回的数据格式List<{cacheName,cacheType}> cacheType 只在类似数据字典表需要体现具体哪个字典分类，其他缓存为null即可 -->
        <!-- 基于service 形式的缓存更新检测 -->
        <!-- <service-checker service="cacheChangeCheckService" method="getChangeCache" check-frequency="15"/> -->
        <!-- 基于rest 形式的缓存更新检测 -->
        <!-- <rest-checker url="http://xxxx/common/getChangeCache" check-frequency="15" username="" password=""/>  -->
    </cache-update-checkers>
</sagacity>